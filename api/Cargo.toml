[package]
name = "prefpoll"
version = "0.1.0"
authors = ["Ethan Yi <ethyi@proton.me>"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib] # logic lives in the library crate, binary is entry to main function

path = "src/lib.rs" # path to library

# production dependencies
[dependencies]
actix-web = "4" # main backend framework
# async runtime
tokio = { version = "1", features = ["macros", "rt-multi-thread"] } 
# serialization
serde = { version = "1", features = ["derive"]}
serde_json ="1.0"
# for initial database configuration values
config = "0.11"
# for generating uuid
uuid = { version = "0.8.1", features = ["v4"] }
# for getting time
chrono = "0.4.15"

# handle integer parsing, parsing port number
serde-aux="3"

# LOGGING
# record spans, structured events with information about start and end time
tracing = { version = "0.1", features = ["log"] }
# helps track span metadata, and activity
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
# formatting logs 
tracing-bunyan-formatter = "0.3"
# redirects logs to the tracing subscriber
tracing-log = "0.1"
# to handle single initialization
once_cell = "1" 
# can specify secret fields
secrecy = { version = "0.8", features = ["serde"] } 
# ??
tracing-actix-web = "0.5"




[dependencies.sqlx] #sqlx dependencies
version = "0.5.7"
default-features = false
features = [
"runtime-actix-rustls",#use actix runtime
"macros", # sqlx::query!
"postgres", # postgres-specific functionality
"uuid", # uuid in sql
"chrono", # map sql time to Rust DataTime type
"migrate", # manage migrations
"offline" # manage how the database can be accessed from docker
]

# dependencies for tests, not included at final release
[dev_dependencies]
reqwest = "0.11"
